/* eslint-disable */
/**
 * Created by BIYY on 2017-11-17.
 */
let config = {
  env: "local"
}
let nativeApi = {};
/**
 * 获取设备平台
 * @returns {number}
 */
nativeApi.getPlatForm = () => {
  const u = navigator.userAgent;
  const isAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1; //android终端
  const isiOS = !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端
  let flatform = 0;
  if (isAndroid) {
    flatform = 2;
  } else if (isiOS) {
    flatform = 1;
  }
  return flatform;
};

/**
 * 获取getSsoToken
 * @returns {Promise}
 */
nativeApi.getSsoToken = () => {
  let ssoToken = null;
  // if (config.env === 'local') {
  //   ssoToken = localStorage.getItem('ssoToken');
  // }
  return new Promise((resolve, reject) => {
    // if (ssoToken) {
    //   resolve(ssoToken);
    // } else {
    //   document.addEventListener('deviceready', () => {
    //     try {
    //       cordova.exec((data) => {
    //         localStorage.setItem('ssoToken', data.ssoToken);
    //         resolve(data.ssoToken);
    //       }, (data) => {
    //         reject(data);
    //       }, 'MideaUser', 'getUser', []);
    //     } catch (e) {
    //       reject(e);
    //     }
    //   }, false);
    // }
    document.addEventListener('deviceready', () => {
        try {
          cordova.exec((data) => {
            resolve(data);
          }, (data) => {
            reject(data);
          }, 'MideaUser', 'getUser', []);
        } catch (e) {
          reject(e);
        }
      }, false);
  });
};

/**
 *  启用起底座方法
 * @param name {String} cordova插件名称
 * @param method {String}cordova 插件方法
 * @param params {Array}cordova 插件参数
 * @returns {Promise}
 */
nativeApi.callApi = (name, method, params) => {
  return new Promise((resolve, reject) => {
    if (window.cordova) {
      try {
        cordova.exec(function (msg) {
          resolve(msg);
        }, function (msg) {
          reject(msg);
        }, name, method, params || []);
      } catch (e) {
        reject(e);
      }
    } else {
    }
  });
};
/**
 * 拍照或选择图片
 * @param params {object} 参数
 * @return {*}
 */
nativeApi.getPicture = async (params) => {
  const imgPackageHeader = 'data:image/jpeg;base64,';
  const imgDefaultBase64Code = '/9j/4QAYRXhpZgAASUkqAAgAAAAAAAAAAAAAAP/sABFEdWNreQABAAQAAABQAAD/4QMpaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDozMzM5RDY2ODMyNzQxMUU1QTJENkEwOTg5MjdGQTczNiIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDozMzM5RDY2OTMyNzQxMUU1QTJENkEwOTg5MjdGQTczNiI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjMzMzlENjY2MzI3NDExRTVBMkQ2QTA5ODkyN0ZBNzM2IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjMzMzlENjY3MzI3NDExRTVBMkQ2QTA5ODkyN0ZBNzM2Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+/+4ADkFkb2JlAGTAAAAAAf/bAIQAAgICAgICAgICAgMCAgIDBAMCAgMEBQQEBAQEBQYFBQUFBQUGBgcHCAcHBgkJCgoJCQwMDAwMDAwMDAwMDAwMDAEDAwMFBAUJBgYJDQsJCw0PDg4ODg8PDAwMDAwPDwwMDAwMDA8MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAEAAQAwERAAIRAQMRAf/EAG8AAAMBAAAAAAAAAAAAAAAAAAQFBggBAAIDAAAAAAAAAAAAAAAAAAMEBQcIEAABBAEDBAMAAAAAAAAAAAABAgMEBQYAERIhMUEHYSIUEQACAgAGAgMBAAAAAAAAAAABAhEDACFREgQFMUFhoRQi/9oADAMBAAIRAxEAPwDWfripp7WwyFy7q13MWmoZtmzXIecYLr0ct8U82vsN+RGq06+pHZt67gqkxMZiNMaH73k3U11ip9hexV3QDAafRywd7BxuorKfDchrKaXjLmTtTVS8cmPl9TP5HUIQ8hTiUOcHgokch46EjronP46IldiqV3T/ACTMQfOsH5wHpOfdddfRY62CsrDqIncCSDBIlYzjXPCbBMsGHy76ehyUxNn0kuvq5UTYLZlPFBbcKipJSElPUjc/Gg8LlfnZmzkqQI9E4a7jrf3pWhAKrYrMD4KiZHg64mLW4tr2WqfdWcq1mrASqVLdW85xHZIUskgDwOw0tbc9rbnJJ+c8SHG4tXGTZUgVdAAB9Y//2Q==';
  if (config.env === 'local') {//本地调试
    return new Promise((resolve, reject) => {
      resolve({
        base64Code: imgDefaultBase64Code,
        base64Url: imgPackageHeader + imgDefaultBase64Code
      });
    });
  } else {//测试或者生产环境
    let opt = {
      quality: params.quality || 75,
      destinationType: params.destinationType || 0,
      allowEdit: params.allowEdit || false,
      encodingType: params.encodingType || 0,
      targetWidth: params.targetWidth || 375,
      targetHeight: params.targetHeight || 667,
      saveToPhotoAlbum: params.saveToPhotoAlbum || false,
      sourceType: params.sourceType || 0,
      mediaType: params.mediaType || 0,
      correctOrientation: params.correctOrientation || true,
      cameraDirection: params.cameraDirection || 0
    };
    return new Promise((resolve, reject) => {
      try {
        navigator.camera.getPicture(
          (data) => {
            resolve({
              base64Code: data,
              base64Url: imgPackageHeader + data
            });
          },
          (data) => {
            reject(data);
          },
          opt);
      } catch (e) {
        console.log('_warn', 'Cordova maybe not exist.');
        reject(e);
      }
    });
  }
};
/**
 * 退出
 */
nativeApi.exit = async () => {
  await nativeApi.callApi('MideaCommon', 'exit', []);
};
/**
 * 改变状态栏颜色
 * @param p
 * @returns {Promise.<void>}
 */
nativeApi.changeColor = async (p) => {
  return new Promise((resolve, reject) => {
    if (window.cordova) {
      try {
        cordova.exec(function (success) {
          resolve(success);
        }, function (error) {
          reject(error);
        }, "MideaCommon", "statusBarColor", p);
      } catch (e) {
        reject(e);
      }
    }
  });
};
/**
 * 全屏
 * @param p
 * @returns {Promise.<void>}
 */
nativeApi.fullscreen = async () => {
  await nativeApi.callApi('MideaCommon', 'setBounces', ['0']);
};

/**
 * 隐藏悬浮按钮
 * @returns {Promise.<void>}
 */
nativeApi.hideFloat = async () => {
  await nativeApi.callApi('MideaCommon', 'hideFloat', null);
};
/**
 * 打开新h5应用或连接
 * @param args
 * @returns {Promise.<void>}
 */
nativeApi.showWidget = async (args) => {
  await nativeApi.callApi('MideaCommon', 'showWidget', args);
};
/**
 * 隐藏导航
 * @return {*|promise}
 */
nativeApi.hideNav = async () => {
  await nativeApi.callApi('MideaCommon', 'hideNav', null);
};
export  default nativeApi;
